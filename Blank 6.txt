JavaScript for App Functionality

const apiKey = 'YOUR_OPENWEATHERMAP_API_KEY';  // Replace with your OpenWeatherMap API Key
const searchButton = document.getElementById('search-btn');
const cityInput = document.getElementById('city');
const tempEl = document.getElementById('temp');
const humidityEl = document.getElementById('humidity');
const conditionEl = document.getElementById('condition');
const forecastContainer = document.getElementById('forecast-container');

searchButton.addEventListener('click', () => {
    const city = cityInput.value.trim();
    if (city) {
        getWeatherData(city);
    }
});

async function getWeatherData(city) {
    try {
        // Fetch current weather data
        const weatherRes = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`);
        const weatherData = await weatherRes.json();

        if (weatherData.cod === "404") {
            alert("City not found.");
            return;
        }

        // Update current weather display
        tempEl.textContent = `Temperature: ${weatherData.main.temp}°C`;
        humidityEl.textContent = `Humidity: ${weatherData.main.humidity}%`;
        conditionEl.textContent = `Condition: ${weatherData.weather[0].description}`;

        // Fetch 5-day forecast
        const forecastRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`);
        const forecastData = await forecastRes.json();

        displayForecast(forecastData);
    } catch (error) {
        console.error("Error fetching weather data:", error);
    }
}

function displayForecast(data) {
    forecastContainer.innerHTML = '';  // Clear previous forecast
    const forecastItems = data.list.filter((item, index) => index % 8 === 0);  // Get data for every 8th item (every 3 hours)
    
    forecastItems.forEach(item => {
        const forecastItem = document.createElement('div');
        forecastItem.classList.add('forecast-item');
        
        const date = new Date(item.dt * 1000).toLocaleDateString();
        const iconUrl = `https://openweathermap.org/img/wn/${item.weather[0].icon}.png`;
        
        forecastItem.innerHTML = `
            <p>${date}</p>
            <img src="${iconUrl}" alt="${item.weather[0].description}">
            <p>${item.main.temp}°C</p>
        `;
        
        forecastContainer.appendChild(forecastItem);
    });
}
